000
Hi, for those who already knows what BlockDX the Blocknet's decentralized exchange is,
here is the most effective tutorial how to setup full Blocknet decentralized exchange backend the layer one from scratch.

001
All what we need is machine or virtual machine with latest stable Debian or Ubuntu system installed. Lets call this machine server.

002
So we open terminal and use SSH to connect to our server first.

003
Then we open main dex-setup installer web page and scroll down to section called additional resources,
and there we select link of full automatic installation.

004
Here in full automatic installation page there is introduction and summary which you can read.

005
What is important to understand that even calling below command automatic, 
the user will be asked for administration password and to enter new password for user VNC session login.

006
We use copy command button and switch back to server terminal window to paste command and confirm.

007
Now all we need to do is wait a little bit, we will be asked to enter administration password twice and then to enter new password for user VNC session login.

008
Then the installation process could take about hour or more depending on server hardware resources as it is configured to build all wallets from official repositories to optimize it for this particular server machine. The combination of used installer arguments installs or forces every component of decentralized exchange system to be set to default expected stage.

009
After successful installation we return back to main dex-setup installer web page and scrolls down to section remote desktop management section.

010
We copy and paste first command to new client terminal window to open secure SSH tunnel for VNC connection.

011
We copy and paste second command to new client terminal window to login into server by VNC for the first time.

012
This two commands are just effective examples but you are free to use any VNC client and SSH tunneling software you want.

013
Instead of following dex-setup environment directory structure with example commands,
we switch to VNC session and we use manual directory browsing inside graphical user interface.

014
Now from section four, we copy second command used start dex-setup environment management.
We switch back to server VNC session and paste command into terminal.

015
Now we copy command used to attach into dex-setup environment management and learn below important keyboard shortcuts,
used to list and navigate dex-setup components. Also very important shortcut to detach and keeping all components running.
Now we switch to server VNC session and paste copied command into terminal to connect for the first time.

016
As you could see all components are nicely named and self explanatory.

017
Now as we want to start trading, for example Blocknet with litecoin.

018
We browse into components named Blocknet and Litecoin Decentralized exchange, and just confirm predefined commands to start this two wallets.

019
Now we switch to Blocknet DEX CLI component and use add, node, onetry auto, to speed up wallet synchronization.
Then we use Litecoin DEX CLI component with same command as well.

020
What we need now is to generate Blocknet and Litecoin wallet addresses to be used for automatic trading bot.
So again we use Blocknet and Litecoin CLI components and use get-new-address dot default command to generate addresses.

021
Now we switch back to dex-setup installer web page section five two one, called mandatory trading strategy finalization.
Here we copy command used to open geany editor with our Blocknet and Litecoin trading strategies.
We switch back to VNC session and paste command into terminal.
You are free to browse and open files manually but this is most effective.

022
What we edit first, we replace Blocknet and Litecoin address configuration values with real values with those which been generated by dex-setup management interface.

023
Remember that every strategy is not bi-directorial, it means you are able to run dex-bot strategy in just one direction, or even possible to configure bot with asymmetric rules, where reasons could be many like very unstable asset.
We can now trace whole predefined bot configuration and edit options to match our specific requirements.
First is Main RPC authentication settings.
   Next. trading pair specification.
   Next. Specification which addresses funds to be used for trading.
   Next. Set to use funds from specified addresses only.
   Next. For any reasons if you want keep always some minimal amount of sold asset.
   Next. Flush canceled orders from trading history every 60 seconds.
   Next. Specify in which asset are open order amounts in.
   Next. Specify size of first open order and possible minimal size.
   Next. Specify size of last open order and possible minimal size.
   Minimal size is very important to set because for example trading Bit-coin at amount of few united states dollars making no sense because transaction fee itself would be much higher than amount send itself.
   Minimal size is used at three cases, At partial orders, At automatic bot order matching and when making order but not enough funds are available to create full size order.
   
   Next. Little more down, what is very important as well is how many open orders should bot keep open at once.
   
   Next is just error handling.
   
   Next. Partial orders feature. We want to keep this feature disabled for now. It is not very important now because build in dex-bot automatic order matching do this work for us.
   
   Next. What is very important thing to configure. Slide start is where first order will be placed related to current market price. Two point one means plus one hundred and ten percent of current market price. So, our four orders will be placed down to last order with price plus four percent of current market price.
   
   Another very interesting and very important functionality which prevent from loosing, rather is main profit maker is dynamic spread.
   This functionality basically means, if some of your open orders are taken, even if asset market price wont go up, bot reconfigures every next order higher and higher.
   Dynamic spread has many options and also ability to be configured to act with exponential price changes, which useful on bull markets.
   Actual dynamic spread is configured to increase spread by 2 percent every time 6 Block less is found in source address, it means been exchanged. 
   
   Next is configuration to set when orders are reopened again. So our bot will reopen accepted orders again only if at least 2 opened orders are accepted by someone or timeout of 300 seconds happen after first order is accepted.
   
   Next is configuration when orders are reset.
      So bot will reset all orders when price changes at least 1 percent at positive way or at least 5 percent at negative way in price.
      Bot will also reset orders every 600 seconds no matter what.
      Bot will also reset orders if 3 orders are accepted.
         
   Next is also very important to understand configuration which are boundaries.
      Boundaries specifies maximum and minimal price levels and actions when boundary is reached.
      This feature could be very useful when operating on very unstable markets, so it could prevent from ending up with just one asset which has no liquidity or no value anymore.
      With minimum boundary you can practically set minimal price under which bot will never sold the asset.
         
   Next is taker bot functionality which could scan open orders and if found matching one or multiple meeting configuration requirement, it will act like standard limit order matcher.
   This functionality could be useful for cases like active faucets or even virtual partial orders feature. 
   
   Next and last are just internal tuning options.
   One which could be important for us is timing how often price updates are check.
   
   Finally don't forget to save both updated files.

024
Our bot would not be able to create orders without funds.
So first we have to add some funds and wait for transaction confirmation.

025
Next very important is to split address funds into small pieces for dex-bot to be able to use them per order.
As we are having 100 block coins.
We switch to blocknet CLI component.
We enter command DX, Split, Address, token name Blocknet, we split by twenty, and finally we copy address of funds we split.
We have to wait for at least one transaction confirmation.

026
We switch back to dex-setup installer page section dex-bot strategy management to learn how to start, stop and clean orders.

027
Now we switch back to server VNC session and start graphical user interface component called Block-DX which could be used to watch or even manually trade all open orders on Blocknet decentralized exchange network.

028
According to dex-setup installer page we have to start dex-bot proxy component first.

029
And finally, now, it is time to start Blocknet Litecoin dex-bot trading strategies for the first time.
As you can see from terminal messages after a while, the orders start to be created and managed.

030
Optionally you can always use BlockDX to watch your orders if you are not familiar with terminal messages.

031
We can call this mission accomplished, but wait!
   Never forget to clean up opened orders after finishing with bot.
   So we push Control Z to stop our trading bot strategy script.
   And we start bot again with, minus, minus, cancel, address parameter and watch if our bot has some orders to clean up.

032
You can verify that orders been cleaned up by BlockDX always as well.

032
Please remember that this was just a tutorial for one trading pair and dex-setup currently supports 11 coins, Bit-coin, Bit-coin cash, Blocknet, Dash, Doge-coin, Lbry credits, Litecoin, Particl, Pivx, Pocketcoin and Verge.

033
So if you want to add one more coin into trading, for example Dash with Litecoin, then you start Dash node component first, then use add-node command to speed up wallet synchronization, then you generate one more Dash and Litecoin address, then you edit strategy to finalize it, then you split Dash and Litecoin coins into corresponding pieces by dx split address command and finally this way you can start one more trading dex-bot trading strategy.

035
Finally this is all folks.
   Thanks for watching, thanks for likes, thanks for sharing and most thanks for using.
   Please also remind, even we do best to test the system, only in production with many real users we will be able to revel more bugs, so please use this software carefully with small amounts only for now.
   
036
And if you have any questions, and the end of dex-setup installer page, there could be found many ways how to contact me directly.

