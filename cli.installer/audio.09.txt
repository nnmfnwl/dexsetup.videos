Now, return back and lets take a look what could be found for example in Blocknet wallet directory.
  First is binary files directory where all build binary files are stored. As command line wallet interface, wallet daemon and wallet with graphical user interface.
  Next is that every wallet profile has own CLI directory where very useful predefined auto-complete commands are stored.
  There is also git source directory, where all wallet source code been downloaded and compiled.
  There is also package directory which is used in case when wallet is not build but rather downloaded and extracted as binary package.

  What we could see next are two profile files used to enter secure development environment.
  And all other files are generated wallet profile as DAO profile, staking profile and decentralized exchange wallet profile.

Now lets go back into main directory where we could find a dex-bot a decentralized exchange bot directory with all generated trading strategies scripts.
   And if we switch git source code directory, there could be found trading configuration files itself.

Now lets go back again into main directory where we could find main dex-setup framework directory which contains all needed scripts for manual component customization and manual management.
Usually users who not need special custom profiles will never touch dex-setup framework itself rather running dex-setup command line installer repeatedly.

In main directory there could be also found Block-DX, the graphical user interface for this decentralized exchange system.

As mostly all basics been explained, lets initiate our decentralized exchange instance for the first time.
   Instead of mouse double click one by one all components to start them in desktop environment manually, the dex-setup generates for us terminal screen multiplexer start script which biggest advantage is that all components becomes manageable also very comfortable by command line interface.

So we switch back to installer readme page to find and copy second command used to start environment with support of graphical user interface mode.
While this command gonna take some few seconds, we switch back to installer readme page to read and learn basic commands and shortcuts like.
   How to attach to service command line interface management by command, screen, minus, X.
   How to list and navigate screen tabs with shortcut, Control, A, double quotes.
   And also also how to detach from while keep all components running in background by shortcut, Control, A, D. 

   Now, switch back to terminal and use screen, minus, X, command to attach to decentralized exchange command line service.
   Now we use mentioned keyboard shortcuts to navigate components and choose which we want to start.
      For example, we would like to use dex-setup just for Pivx staking, so we choose Pivx staking component, where we can see already predefined command, just enter key confirmations is needed, and Pivx staking component would be started.
      So if we really start it, it would looks like that native Pivx wallet is been started, but in real, everything is started isolated inside system and network sandbox by firejail and tor service.
      
      Advantage is that we can in real time watch what is printed into log files component by component.
      Now also switch to Pivx CLI the command line interface component. What is very useful, if we enter dot, slash and then push tab key button, the dex-setup provides to us lot of predefined commands, all those commands are generated by dex-setup and could be easy added later by users requests, so whole community will benefits from it.
      
      For now we not need this Pivx component running, so we use dot, slash, stop command to make it exit.
   
      But now, what if we want to use decentralized exchange to trade Blocknet with Litecoin.
      So we need start Blocknet and Litecoin decentralized exchange wallet profiles first, and wait until our wallets are synced. We also check and unlock our wallets if encrypted by graphical user interface or by command line interface command dot, slash, unlock, dot, full.
      
      It is very important to understand that dex-setup is designed for setting up truly fully decentralized exchange backend, because of this we focus primary on setting up system with full nodes which are technically most important components to call this system decentralized. Dex-setup for now does not support lite components trading setup, it will be added later. There is lite setup called Blocknet A I O monitor which works for all operating systems.
