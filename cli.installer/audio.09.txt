So lets take a look what we could find in dex-setup root directory.

All components have own separated directory here.

In contrast with other systems architectures which are using virtualization, containers, docker or whatsoever, all dex-setup components are existing as main file-system directories configured to look like running on native operating system environment, but at same time isolated by native kernel features by firejail custom profiles and also network isolation by tor by proxy-chains. It means every running component can not see other user files or other components files, for example Bitcoin wallet component can see chain directory which is by default dot bitcoin and bitcoin binary file.

Lets take a look what could be found for example in Blocknet wallet directory.
  First is binary files directory where all build binary files are stored. As command line wallet interface, wallet daemon and wallet with graphical user interface.
  Next is that every wallet profile has own CLI directory where very useful predefined auto-complete commands are stored.
  There is also git source directory, where all wallet source code been downloaded and compiled.
  There is also package directory which is used in case when wallet is not build but rather downloaded and extracted as binary package.

  What we could see next are two profile files used to enter secure development environment.
  And all other files are generated wallet profile as DAO profile, staking profile and decentralized exchange wallet profile.

Lets back up into main directory where we could find a decentralized exchange bot directory with all run scripts for generated trading strategies.
And if we switch git source code directory, there could be found trading configuration files itself.

Let back up again into main directory where could be found main dex-setup framework directory which contains all needed scripts for manual component customization and manual management.
Usually users which not need special custom profiles will never touch dex-setup framework itself rather running dex-setup command line installer repeatedly.

In main directory there could be also found Block-DX, the graphical user interface for this decentralized exchange system.

As mostly all basics been explained, lets start our decentralized exchange instance for the first time.
   Instead of starting all components manually inside desktop environment one by one by mouse double clicks, the dex-setup generates for us terminal screen multiplexer start script which biggest advantage is that all components becomes manageable also very easy by command line interface.

So we switch back to installer readme page to find and copy second command used to start environment with support of graphical user interface mode.
This will take some few seconds.

As everything been designed to run as user space service, we must learn how to attach to this service command line interface management and also how to detach from to keep all components running in background. 
   So lets use screen minus x command to attach to command line service.
   Now we use keyboard shortcut to show and list all components and choose which we want to start.
      For example, we would like to use dex-setup just for PIVX staking, so we choose PIVX staking component, we can see here is predefined command, just enter key confirmations is needed.
      Lets take a look, it looks like that native PIVX wallet is been started, but in real, everything is started isolated inside system and network sandbox by firejail and tor service.
      
      Advance is that we can in real time watch what is printed into log files component by component. Now switch to PIVX command line interface component. What you can see, if we push dot and slash and tab key button, the dex-setup provides to us lot of predefined commands, all those commands are generated by dex-setup and could be easy added later by users requests, so we all will benefit from it.
   
      But now, what if we want to use decentralized exchange to trade Blocknet with Litecoin.
      So we start Blocknet and Litecoin decentralized exchange wallet profiles first, and wait until our wallets are synced. We also check and unlock our wallets if encrypted.
